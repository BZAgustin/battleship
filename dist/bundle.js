(()=>{"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}const e=function(){var e=Array.from({length:10},(function(){return Array(10).fill(null)})),r=Array.from({length:10},(function(){return Array(10).fill(!1)}));function n(t,r,n,a){if(!1===a){for(var o=0;o<t.length;o+=1)if(null!==e[r][n+o])return!0}else for(var l=0;l<t.length;l+=1)if(null!==e[r+l][n])return!0;return!1}function a(t,e,r,n){return!1===n?t.length+r>10:t.length+e>10}function o(t,r,o,l){if(a(t,r,o,l))throw new Error("Ship length exceeds boundaries");if(n(t,r,o,l))throw new Error("Overlapping other ship");if(!1===l)for(var i=0;i<t.length;i+=1)e[r][o+i]=t;else for(var c=0;c<t.length;c+=1)e[r+c][o]=t}return{board:e,trackingBoard:r,isCoordinateTaken:function(t,e){return r[t][e]},placeShip:o,receiveAttack:function(t,n){if(!0===r[t][n])throw new Error("Coordinate already hit");return null!==e[t][n]?(e[t][n].hit(),!!e[t][n].isSunk()):(r[t][n]=!0,null)},areShipsSunk:function(){for(var t=0;t<10;t+=1)if(!e[t].every((function(t){return null===t})))return!1;return!0},placeFloat:function(e){var r,l=function(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var a=0,o=function(){};return{s:o,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,i=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var t=n.next();return i=t.done,t},e:function(t){c=!0,l=t},f:function(){try{i||null==n.return||n.return()}finally{if(c)throw l}}}}(e);try{for(l.s();!(r=l.n()).done;)for(var i=r.value,c=!1;!c;){var d=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),s=Math.round(Math.random());a(i,d,u,!!s)||n(i,d,u,!!s)||(o(i,d,u,!!s),c=!0)}}catch(t){l.e(t)}finally{l.f()}}}},r=function(t,e){return{name:t,length:e,hits:0,isSunk:function(){return this.hits===this.length},hit:function(){this.hits+=1}}},n=function(t){var n=t,a=e(),o=[r("Carrier",5),r("Battleship",4),r("Cruiser",3),r("Submarine",3),r("Destroyer",2)];return{name:n,gameboard:a,float:o,placedShips:0,isFloatSunk:function(){return o.every((function(t){return!0===t.isSunk()}))},placeMyFloat:function(){a.placeFloat(o)},addPlacedShip:function(){this.placedShips+=1}}};(function(){var t=n("Player"),e=n("Computer"),r=function(){var t=document.querySelector("body"),e=document.getElementById("left-board"),r=document.getElementById("right-board"),n=document.getElementById("left-stats"),a=document.getElementById("right-stats"),o="./assets/explosion.png",l=document.querySelector(".overlay-container"),i=document.getElementById("winner"),c=document.getElementById("btn-play-again"),d=!0;function u(){for(;e.firstChild&&r.firstChild;)e.removeChild(e.firstChild),r.removeChild(r.firstChild)}function s(t,e){var r=e;null!==t?(r.style.backgroundColor="#ff6200",r.firstChild.style.display="block"):r.style.backgroundColor="rgba(150, 150, 150, 0.5)"}function f(t,e,r,n,a){for(var o=[],l=0;l<e;l+=1)if(a){var i=document.querySelector('[data-row="'.concat(r+l,'"][data-col="').concat(n,'"]'));r+l<10&&null===t[r+l][n]&&o.push(i)}else{var c=document.querySelector('[data-row="'.concat(r,'"][data-col="').concat(n+l,'"]'));n+l<10&&null===t[r][n+l]&&o.push(c)}return o}return{body:t,leftBoard:e,myStats:n,opponentStats:a,verticalPlacement:d,drawBoards:function(){for(var t=0;t<10;t+=1)for(var n=0;n<10;n+=1){var a=document.createElement("div"),l=document.createElement("div"),i=document.createElement("img"),c=document.createElement("img");i.src=o,c.src=o,i.style.display="none",c.style.display="none",a.className="cell",l.className="cell",a.dataset.row=t,a.dataset.col=n,l.dataset.row=t,l.dataset.col=n,a.appendChild(i),l.appendChild(c),e.appendChild(a),r.appendChild(l)}},clearBoards:u,switchAxis:function(){d=!d},reset:function(){u(),n.innerHTML="Place your Carrier",a.innerHTML=""},updateStats:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=e;null===t?n.innerHTML="No hit":t?t&&(n.innerHTML="".concat(r," has been sunk!")):n.innerHTML="It's a hit!"},showGameOverScreen:function(t){l.style.display="flex",i.innerHTML="".concat(t," is the winner!")},addCellListeners:function(t,o,l){Array.from(r.childNodes).forEach((function(r){r.addEventListener("click",(function(r){var i=parseInt(r.target.dataset.row,10),c=parseInt(r.target.dataset.col,10);if(t.gameboard.isCoordinateTaken(i,c))return a.innerHTML="Coordinate already hit",null;s(t.gameboard.board[i][c],r.target),l(o,t,i,c,a);for(var d=Math.floor(10*Math.random()),u=Math.floor(10*Math.random());o.gameboard.isCoordinateTaken(d,u);)d=Math.floor(10*Math.random()),u=Math.floor(10*Math.random());return s(o.gameboard.board[d][u],e.querySelector('[data-row="'.concat(d,'"][data-col="').concat(u,'"]'))),l(t,o,d,u,n),null}))}))},addRestartListener:function(t){c.addEventListener("click",(function(){l.style.display="none",t()}))},addShipPlacementListeners:function(t,r){var a=Array.from(e.childNodes);a.forEach((function(e){e.addEventListener("click",(function(e){var o=parseInt(e.target.dataset.row,10),l=parseInt(e.target.dataset.col,10);if(5===t.placedShips)return null;try{t.gameboard.placeShip(t.float[t.placedShips],o,l,d),t.addPlacedShip(),5===t.placedShips?n.innerHTML="Player's turn":n.innerHTML="Place your ".concat(t.float[t.placedShips].name," (Press 'R' to rotate)")}catch(t){return n.innerHTML="Invalid placement",null}return 5===t.placedShips&&(a.forEach((function(t){t.classList.add("disabled")})),r()),null})),e.addEventListener("mouseenter",(function(e){var r=parseInt(e.target.dataset.row,10),n=parseInt(e.target.dataset.col,10);return 5===t.placedShips||null!==t.gameboard.board[r][n]||function(t,e,r,n){f(t,e,r,n,d).forEach((function(t){t.style.backgroundColor="#0077ff"}))}(t.gameboard.board,t.float[t.placedShips].length,r,n),null})),e.addEventListener("mouseleave",(function(e){var r=parseInt(e.target.dataset.row,10),n=parseInt(e.target.dataset.col,10);return 5===t.placedShips||null!==t.gameboard.board[r][n]||function(t,e,r,n){f(t,e,r,n,d).forEach((function(t){t.style.backgroundColor="rgba(255, 255, 255, 0.5)"}))}(t.gameboard.board,t.float[t.placedShips].length,r,n),null}))}))}}}();function a(t,e,n,a,o){null!==e.gameboard.board[n][a]?r.updateStats(e.gameboard.receiveAttack(n,a),o,e.gameboard.board[n][a].name):r.updateStats(e.gameboard.receiveAttack(n,a),o),e.isFloatSunk()&&r.showGameOverScreen(t.name)}function o(){e.placeMyFloat(),r.addCellListeners(e,t,a)}function l(){r.drawBoards(),r.addShipPlacementListeners(t,o)}function i(){r.reset(),t=n("Player"),e=n("Computer"),l()}return r.addRestartListener(i),r.body.addEventListener("keypress",(function(e){"r"===e.key&&(Array.from(r.leftBoard.children).forEach((function(e){var r=e,n=r.dataset.row,a=r.dataset.col;null===t.gameboard.board[n][a]&&(r.style.backgroundColor="rgba(255, 255, 255, 0.5)")})),r.switchAxis())})),{start:l,newTurn:a,restart:i}})().start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,